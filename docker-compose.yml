version: '3.9'

services:
  frontend:
    image: sermalenk/skypro-front:lesson-38
    restart: always
    depends_on:
      - api
    ports:
      - '80:80'
#    networks:
#      - backend

  api:
    build:
      context: .
    environment:
      POSTGRES_HOST: 'db'
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: '123456'
      POSTGRES_DB: 'postgres'
      SECRET_KEY: 'very_secret_key'
      POSTGRES_PORT: '5432'
      DEBUG: True
    depends_on:
      db:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
#    networks:
#      - backend

  migrations:
     build:
       context: .
     environment:
       POSTGRES_HOST: 'db'
       POSTGRES_USER: 'postgres'
       POSTGRES_PASSWORD: '123456'
       POSTGRES_DB: 'postgres'
       SECRET_KEY: 'very_secret_key'
       POSTGRES_PORT: '5432'
       DEBUG: True
     depends_on:
       db:
         condition: service_healthy
     command: >
       sh -c "python3 todolist/manage.py migrate"

  db:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
      POSTGRES_DB: postgres
    restart: always
    ports:
      - '5432:5432'
    volumes:
      - pg_data:/var/lib/postgresql/data
#    networks:
#      - backend

    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres -d postgres']
      interval: 5s
      timeout: 5s
      retries: 5



volumes:
  pg_data:
